services:
  postgres:
    image: postgres:16.4-bullseye
    container_name: pgsql
    restart: always
    shm_size: 128mb
    environment:
      - POSTGRES_USER=${USER}
      - POSTGRES_PASSWORD=${PASS}
      - POSTGRES_DB=elysia
      - PGDATA=/var/lib/postgresql/data/pgdata
      # - POSTGRES_HOST_AUTH_METHOD
    volumes:
      - ./db/data:/var/lib/postgresql/data
    networks:
      - db-net
    ports:
      - 5432:5432

  adminer:
    image: dockette/adminer:full
    container_name: adminer
    depends_on:
      - postgres
    restart: always
    environment:
      - UPLOAD=4096M
      - MEMORY=128M
    networks:
      - dev-proxy
      - db-net
    labels:
      - "traefik.http.routers.adminer-http.entrypoints=web"
      - "traefik.http.routers.adminer-http.rule=Host(`adminer.docker.localhost`)"
      - "traefik.http.services.adminer.loadbalancer.server.port=80"
      # - "traefik.http.routers.adminer-http.middlewares=adminer-https"
      # - "traefik.http.middlewares.adminer-https.redirectscheme.scheme=https"
      # - "traefik.http.routers.adminer.entrypoints=websecure"
      # - "traefik.http.routers.adminer.rule=Host(`adminer.docker.localhost`)"
      # - "traefik.http.routers.adminer.tls=true"
      - "traefik.docker.network=dev-proxy"

networks:
  dev-proxy:
    external: true
  db-net:
    driver: bridge
